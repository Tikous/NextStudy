"use strict";(()=>{var e={};e.id=569,e.ids=[569],e.modules={67096:e=>{e.exports=require("bcrypt")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},59706:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>f,patchFetch:()=>v,requestAsyncStorage:()=>g,routeModule:()=>x,serverHooks:()=>w,staticGenerationAsyncStorage:()=>h});var s={};t.r(s),t.d(s,{POST:()=>c});var a=t(49303),i=t(88716),n=t(60670),o=t(81216),u=t(87070),p=t(7410),l=t(67096),d=t.n(l);let m=p.z.object({email:p.z.string().email(),password:p.z.string().min(5)});async function c(e){let r=await e.json(),t=m.safeParse(r);if(!t.success)return u.NextResponse.json(t.error.errors,{status:400});if(await o.Z.user.findUnique({where:{email:r.email}}))return u.NextResponse.json({error:"User already exists"},{status:400});let s=await d().hash(r.password,10),a=await o.Z.user.create({data:{email:r.email,hashedPassword:s}});return u.NextResponse.json({email:a.email})}let x=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/register/route",pathname:"/api/register",filename:"route",bundlePath:"app/api/register/route"},resolvedPagePath:"/Users/saikouwu/study/mosh/NextStudy/next-app/app/api/register/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:g,staticGenerationAsyncStorage:h,serverHooks:w}=x,f="/api/register/route";function v(){return(0,n.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:h})}},81216:(e,r,t)=>{t.d(r,{Z:()=>a});let s=require("@prisma/client"),a=globalThis.prismaGlobal??new s.PrismaClient}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[948,972,410],()=>t(59706));module.exports=s})();